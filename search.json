[{"title":"Hello World","url":"/2024/03/24/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n","categories":["Other"],"tags":["Other"]},{"title":"比较混乱的一天","url":"/2025/08/01/Diary/2025-08-01%20%E6%AF%94%E8%BE%83%E6%B7%B7%E4%B9%B1%E7%9A%84%E4%B8%80%E5%A4%A9/","content":"\n      \n        446254cdb18d9d93fdca03421e2479cc7e0958ffc99a22b69a86293abb5f1753a156a58dbef5b49603ebb9b3cea18aa7bb6420d93cd277d99b0765196f2058fd66223017a30b5d01189764cec54af9cf505bd22d446e6db1207f231bfc782e96556d0b67247b4b446f22b4f318990ce5206f5fa1be8edab64f395a2be46cf16798ee8b077c3a544d7753c7612748203662960b803499295a5433f38a6f6b7dba08d74b477b40469ef5e46d8ebaaabca574527addfe4120f57e7597436a979918e70d5834da8e2d014ce7a4868998c5c040f1c7a0a2829364abb42677474baa48c9883f84879d7958be15189b89e7e99d8d94a58ad6ce49074ba42b3b149041fef1c49d085ae28b51c6f73e9a5eafab3c6627ffb49a8e8f1928c2127a0428a190c8863a8327cb1472b4290b25448db5712392bd62c79e9c3e34d2a21b17fa274a830f8add6651f1e01db8dbd1ef9c0fa377589a8afdbde48eb95100315fa2c915c7c0b1af6ac277719440019a1695768b6954e5ee5db34c3310523dadacab00cf4c7d18bc58df5494b36c8748ac6153e399a32d0297fe5b6f95c38842475586f9a4415c7fcfd40a933c42f10ace8efa64258ce09e73bca4d803ffe78b9f9fadb502002d4c8424421574c548cf39d8977935d56801ea8601ca05c641dc3cd13b8edcaa4855cd21ab314fcddb7ef2deabf1b66500408406c2fe02aa455e7f936685d08952966b770564414a71827072348a3d5cfce65c4eb1f24381ad8a899acd6d6218f838e2b3631fc16e110dbf347c10a459db69e44da561a08215743eb6ef8e512bfb867af5962c32617676f284249c8d61791795954153aecd88f857e8a64fa8658296a12f4dc6270317e7678337ca76d616d7bef288b4e3e2b249da9d46806824716813589c6659f712db35118b95c601d8c50a7e6ebd54b91b386b7032d8321ad3ddc7c46c03b17de2723e50dd50903a8ed12f42026f172035989d310ee2e9d81630ae16e5c8a3b42996da69df9300ee40020085da8339d6e5d2343c4b3c3717aacbcabdd32a4740ecb9f08d4930c1c7d55b11ca99624a6db26991b0d920b350c7794042e716f68719558d2521a317def2ac341be3b4e2885bd94b83b08b49ad8f3e98e9c155c947627e943a633e00ccdf3581174fd474152e1e7fb0e4b16694c6837c476904330658e7df1fd26b566d9e64f18aa837b3579448a9d117cfae762be6438320a4689dafc1ac91a50da3a0c3c549919f6b1d3312b3254e6f25b4e4a4b8a971a937d23643d7135b7b0cffdf9030cdaf558acc0900bd2624450d9ac05b43ba6f7afb6e3f4adbb45ea7210d229b042411add69964883cb2c1e296f8c382e6464598496167dddcc37021e023c0de9720a44118100e1fa84381c9baa6092d1628c8e71872caf98ccffff7e60cb351de160bab23674f0dc9946cb9c59376129a3eed97b95183ab9111e95850dc323626892473a732f80cfa6287d012f623d730e3c1168f3db08a532779c445316f2fa278680ab63710392283571b9710bb680bf401b1f24d2f052ff920b62fdc247a634c66b348eded2cd2b3a42d45fe19b712566f31c51be6b29f34c0c063b7dbccec58d41895a1beb42c6779100616ccc92baf8b6a12e615e27b21e2005e8329887391006cda1b77ccc592b703d4844826b645baa3925cb81b7236b0ba4a9ad884a33f29b7f9a83a942b69e77d092550aa1f87202d52ad9d1bc783003bd7476b01c8c3f884914360644c6bd01e335f2c826c463cdf4c265349dddb918a07adb7eea2b853f7157556bfe7c32a3c65508523968d7ad67f71ae820726ca619a039f26caeabf1e9ed8214b4a6a34ab2a486383026f24f6bccc150205b9439ec91e4fe121cf1155661ac1dba47367c009db85709574e5372b423c4ff03d3389b6912c8f031a1ececae5487c018e0756db8ac598613a7346b6261fc9649864d9e64912f1cc7f40af6153b6123311133d2706c5036eb7e41656dfe1b79db28a1c292818e1c4e5106ea585eb4baab40784beda36ad1378b665bdcea4db917a4261c40ab4068e13753af87a899d8cf01d3ee265138168208f9d1fda0c2bd653ecfcf9dd53b7cd777ea1e4e741fe9e441781b6dad167cfad306aa78fed041a03b63fdb77ad617c5c5c6e970985337e27c74e373b4a61cf2a3ebd16dcb56c55ee2f89188cd842ff0a782f0d5348aa2444985b6b80756dbe6e0ca670200a85b8bc30d0bfe1d87cba6dc8a93b66afc9128abc315cf0e87baf48c597397b77c14465c60e475ff45adb18f42f8c936bc324f49c1eabebe249f9a17649dc431fa10375f765bbeba83627eb42e8756cc6cb25b74b074427c390f71c1643bfa93b95ae1f141cdfaf36c47bdd4d334a50ebd6d5f355ff78812e21aa4b631bf33c78d744aecc7587b8388fc072cf4a253254ba521fde4043961d6e702f32475bdf7319d9bef9d519396a0d4794b7e4c43ba8efc758eadd26708ed2a6c1fee1e80802cd3e5c962eac4733b7921b682ce9a7c19149c16a769828625a583b8d1a5d3b7926ca91b18d824b83ce415ce36f26c4de9b0ae8087b3dc364ae19a6fa23d468ab9e578b528aaae642eb69d5882a600066148fbf95168a5dbdc607ecaadc983ebd77cb4dd9f4111820f64be2e77283296d4be2c7e3a23f9da1a335074bed78f763391a339dad7b954cfcc647e0e2413b6eb54cb532d9296a6205699001dfb54949331da43b93cb9aeb3e71c728cd820dea3301853fe768a455a261c70a4a3caadb12293cb622a6fcf10bbc2e2c06a4b3dd867f0cb57e05370dedd5777092bcf3fa608e599deceae586965fa0f32eb674666cc403c92667919d091c9987edeab1251c041b78d9240a2278f02682995441b54eb074360611\n      \n      \n        \n          \n          \n            请输入与 Nervld Island™ 取得弱神经连接时的口令：\n          \n        \n        \n      \n    \n    ","categories":["Diary"],"tags":["Diary","🌧️","😕","🚩"]},{"title":"First-Diary","url":"/2025/07/31/Diary/First-Diary/","content":"从今天开始，我就要更新自己的博客啦？敲开心ヾ(≧▽≦*)o\n\n那么今天主要是完成了主题的构建，目前长这样(&#x2F;ω＼)：怎么样，感觉还是不错的，有点游戏的感觉反正一步步构建就变成这样啦，哈哈😄接下来主要就集中在：\n\n把之前的笔记整理成博客\n构建一下方便的流程，总结一下也发成笔记\n\n\n今天晚上一定把Obsidian这边弄好，加油ヾ(≧▽≦*)o\n就在我打算创建快捷启动hexo指令的时候\n铛铛铛~~\nfluent search居然突然更新成win11风格UI了，感觉稳定性大大增加，˶╹ꇴ╹˶！\n","categories":["Diary"],"tags":["🚩","OpenDiary"]},{"title":"测试图片","url":"/2025/07/31/Servld/test-img/","content":"\n      \n        8341757e6ee988888cc17467f23dcd1e0e82e18bf4b577b651ea4ccd51ed10f77da19a5cdca1f479c85111432a84afcb7907a96751bc641e02c6d12f97e7f6448876b274f9108412d7926afc1a3ef623971e101218b5d6b6734918859458a3455b4c9a4b30335f62dd0076f169eab9cdbb1d78e8b232057aae7eda4fb1d6c2dce1e55880a5fdee4bf452771bbe1884285b19ac27b1d9e65b6ac03cb58ea65eaa93a2a58975a0d08d61ba7eddc8074222bc5a7485f7bf094e98418ce1dd524afa\n      \n      \n        \n          \n          \n            请输入与 Nervld Island™ 取得弱神经连接时的口令：\n          \n        \n        \n      \n    \n    ","categories":["Servld"],"tags":["Servld"]},{"title":"从Unity到UE的早期经验总结","url":"/2025/08/02/Tech/%E4%BB%8EUnity%E5%88%B0UE%E7%9A%84%E6%97%A9%E6%9C%9F%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/","content":"背景最近重新拾起UE学习一段时间了，发现再次学习感悟确实比一开始多。并且逐渐发现了引擎的共通之处。故撰此文章来进行梳理，以引导后来的朋友，解我当初不能解之疑惑。\n毕竟当时我从Unity开始往UE转的时候，真的各种不习惯，也想着找一个别人总结的经验贴，但是当时感觉这些博客的比较太过公式化（也就是罗列各种API，仅仅是在UE C++中复刻Unity中的C#代码）。但忽略了我们真正的疑惑和需求。\n\n所以，我希望能从更加接近引擎设计逻辑的角度去探讨他们的不同，以及从一个具体的例子来指导我们逐步认识UE\n\n粗略对比编辑器文件组织结构Unity组织结构是一个Asset里面放置当前项目的所有资产和代码，当你打开一个unitypackage的时候，Unity会帮你直接导入到Asset文件夹，而UE这边则是导入Content文件夹。\n我们当然可以把Content当做Asset去使用，但是UE其实是提醒我们：\n\n我们自己的文件和资源也要创建一个文件夹，名字就是我们项目名称，这样我们的资源和Content资源就可以完全分开，我们需要什么，再去复制那一部分资源即可。\n\n场景视图以及游戏对象Unity的场景视图内的GameObject我们可以随意修改他们的父子关系，可是在UE里面并不容易，因此之前在Unity中使用的灵活的给不同物体创建脚本，甚至在游戏运行过程中在场景视图里面再去轻松的启用和关闭脚本、改变物体父子关系等等，就显得不那么适用。\n而这就引出了Unity和UE对待游戏对象很大的不同\n\nUnity开发者更喜欢组合的开发模式，把功能分散到各个脚本中，而脚本又分散到各个物体上，因为创造脚本很容易，并且每个脚本都能充分调用Unity的功能，再给自己加上各种组件。\n而UE开发者大部分时间用的是继承，比如创建一个个蓝图类去继承C++类，对于喜欢纯C++开发逻辑的我，比较倾向于将蓝图类比为Unity里面的Prefab，因为我的逻辑主要用C++实现，而创建蓝图，主要是为了将他们作为实例化对象，并且修改一些绑定的资源。\n\n引擎现有代码对于这一部分，我并没有做完整充分的调研，就个人感觉而言，Unity很多代码似乎集中在编辑器部分，这使得Unity的编辑器很稳定而且很好用。但UE的代码很多都集中在各种实用的功能上，比如一个自带的第三人称控制器，里面甚至包含了联机需要的代码。\n所以如果我们的目的单纯是制作游戏，那么当我们熟悉UE之后，做出一个功能完善的游戏是更加容易的。\n我们要写的代码正因为UE为我们添加了那么多功能和限定，让我们自己想要开始写功能的时候，最好的方案不是从零开始，而是先学习正确的使用方法，然后再编写代码。\n好在现在AI工具非常强大，并且虚幻官方的论坛也有很多问题的答案。因此我们要做的就是熟悉虚幻给我们的各种类。\n比如当我想要制作一个人物控制器的时候，涉及到的类就包括动画蓝图、角色控制器、SkeletalMesh，Montage、blend space等等，当然这些功能我们在学Unity的时候也是一点点学的，所以接受就好了，记住他们一般的作用流程。\n最关键的是当我们想要真正写自己的C++代码的时候，我们得在.h文件里面定义变量，通常是一些资产、一些组件的引用等等，这些名字我们要了解，可以从蓝图里面去找对应的名字。随后我们在.cpp文件中实例化这些组件，使用这些组件，并且可以通过方法改变这些组件的父子关系。\n\n不同于Unity中我们可以轻松的将组件和游戏对象区分开，这里我们要记得AActor是类似于GameObject的存在，但是Component也有可能是一个拥有自己Transform和独特功能的类似GameObject的存在，但是他们并不相同，比如AttachToComponent和AttachToActor，可以分别做到将一个对象转移到Component或者Actor的下面。（将一个物体转移到Component下？这在Unity是无法想象的）\n\n有时候蓝图里面的方法想要在C++使用并不方便，但是坚持用C++能让对象的引用关系和逻辑变得清晰。所以这里只能通过逐渐学习来熟悉API。\n以一个例子来详细对比\n比如说我们要实现一个第三人称射击游戏：\n\n在Unity中我们会创建一个空物体，然后给他绑定上碰撞体，动画器，再给他加一个子物体，显示出角色蒙皮，我们下载好动画资源并改为humanoid，就可以和角色适配上。但是在UE里，我们的动画需要经过重定向操作（相比还是挺耗时的）以更好的适配动画数据。\nUnity我们在动画器里面做出各种状态过渡，然后用C#代码给这些过渡条件提供值或者触发，而UE里面AnimInstance类就是动画器，我们创建一个C++代码继承它之后，它的成员就可以暴露给自己的蓝图子类，在子类里面编辑动画状态转移。\n为了实现武器拾取，我们都会在骨骼上放置插槽，当武器拾取之后，我们重新绑定父对象并设置Transform组件。只不过UE里面转移物体位置的函数，就自带可以填入插槽名称和Transform变化方式的参数。\n我们的武器需要生成子弹，这就需要创建一个子弹预制体以及子弹发射位置，在Unity中我们自然的完成这一动作，并用Instantiate进行实例化预制体，Instantiate是GameObject的方法，但是在UE中，我们用GetWorld()-&gt;SpawnActor&lt;&gt;()，并且我们如果要传入蓝图类，可以定义一个STSubclassOf&lt;AActor&gt;变量用于在编辑器里面传入蓝图类，然后我们把它当做预制体来生成。\n在Unity中我们可以用骨骼偏移来制作瞄准效果，UE中我们则使用Montage来在原本基础上再播放一个动画去覆盖原本动画。和Unity一样，动画文件里面可以放置通知，但是UE更多的是可以放置粒子特效什么的。Unity里面自动调用同名函数，而UE里面是在通知前面加上AnimNotify_作为前缀的方法，会自动调用。（UE是这样的，喜欢在各种地方加上前缀来标注，但是实际上用到的确实去除前缀后缀的属性、函数）\n其实UE用多了之后，会发现思路被UE的规则梳理过一遍之后，变得更清晰。当然在UE学习使用的过程中也会遇到各种各样意想不到的问题，这些在以后的文章中再分享~\n题外话用了UE的资产商店才知道优质的免费资源原来这么多，现在虽然虚幻商城全面转到了Fab上，但是免费资产赠送依然存在，并且据说周期缩短了，有时可以看到资产上面标注了对Unity的兼容性。\nFab商城链接：Fab\n","categories":["Tech"],"tags":["UE"]},{"title":"ebs AI动画流程","url":"/2024/02/05/Tech/AIGC/ebs%20AI%E5%8A%A8%E7%94%BB%E6%B5%81%E7%A8%8B/","content":"使用指令\nffmpeg -i file.mp4 -vf fps&#x3D;12 %d.png\n负面提示词：easynegative\n正面提示词：masterpiece, best quality, 1girl, solo\n提示词权重：(1girl:1.2)\n采样方式有：Euler系列和DPM++系列，可以在脚本中用X&#x2F;Y&#x2F;Z Plot对比\n常用高宽：512 &#x2F; 768 &#x2F; 1024\nControlnet\n\n过程\n将图片丢到tagger里面筛选出描述姿势的词\n\n使用三个controlnet\n\ntile   以promot为准\ndepth  权重0.6\nreference only   目标角色图片，需要扣掉背景\n\n\n\n02:  1girl, solo, , open mouth, 均匀, looking at viewer, simple background, smile, arms behind head,  cowboy shot, arms up\n输出ffmpeg -r 12 -f image2 -i %d.png output1.mp4\n补帧先速度拉满从12-&gt;24，再质量拉满从24-&gt;60\nEbs流程stage1 将视频拆成单帧输入一个项目路径\n输入文件路径，注意用\\斜杠\nstage1 生成蒙版将关键帧和全部帧分别生成蒙版到\nvideo_mask 和 video_key_mask\nstage2 给关键帧打上tag就是把反推出来的tag保存到源文件中\nstage3 进入图生图进行单帧渲染\n输入目录为关键帧，输出目录为img2img_key\n去噪强度和重绘幅度一致\nFirstGen回送源Current、\n启动single mode， maskinpaint，与图片名称匹配\n输入关键帧蒙版路径\n从文本文件读取提示词\nstage4 批量放大图片批量放大输出目录 img2img_upscale_key\nstage5 点击生成ebs文件stage7 点击生成视频stage8 替换视频背景知识采样器\n","categories":["Tech"],"tags":["AIGC"]},{"title":"MMD制作流程","url":"/2025/08/03/Tech/MMD/MMD%E5%88%B6%E4%BD%9C%E6%B5%81%E7%A8%8B/","content":"初始准备\n拖入人物场景模型\n拖入ray.x, ray_controller.pmx\n拖入天空盒的pmx\n修改绘制顺序skybox&gt;stage&gt;actor\n人物场景加上main.fx\nEnvLightMap给天空盒上fx，材质也要改成skybox，再加fog\n\n\n如果有旋转，main里也要改成一样的\n\n\n关闭显示地面阴影，抗锯齿，过滤各向异性\n\nMME各栏介绍Main：\nmain_ex_alpha:对天空盒透明\nmain_ex_mask:对场景透明\nmain_ex_noalpha:不透明\nmain_ex_with_sphmap:启用镜面插槽\n\nMaterialMap：\n通过photoshop&gt;滤镜&gt;3D创建材质的法线贴图和凹凸贴图，放在一个文件夹里，将matirial复制一份放进去，修改最后一行为..&#x2F;，还有贴图路径，再用这个material替换掉原来的\nreadme里有具体修改属性\n\nSSAOMap：&#x3D;&#x3D;在shadow里&#x3D;&#x3D;\n\n通过选择不同的SSAO.fx调整环境光遮蔽的程度\n\n建议：将人整体的系数调低，眼睛直接改为0\nPSSM:一共有四个，对应摄像机的四个方向，主要调整影子的有无\n\nSKYBOX:\n左上：色彩平衡\n左下：漫反射色彩平衡\n右上：\n光强，镜反射，次表面亮度（通透渡），光向\n\n\n右下：\n\nHSBV：固有色，纯度，亮度，强度\nSky Hemisphere：\n纯白背景天空盒，可以调颜色；\nSky Night：\n与上面类似，默认黑色；\nTime of Day：\n\nmain材质改为skybox材质\n再改EnvLightMap和FogMap(选最长的)\n\n特点：物理天空，丁达尔效应，调整太阳位置\n用法：可以在帧里注册照明操作，实现动画\n\n左上：太阳大小，强度，物理化，偏移，虚拟太阳高度\n左下：调整雾气\n右上：\n右下：调整云朵数量，运动\n\nRAY：\n左上：光强，阴影颜色·强度，环境光遮蔽，光线通透性(SSSS)\n右上：将ray.x追踪到模型，拉高MeasureMode\n左下：尽量不要先动，后期添加额外插件\n右下：调色\n\nMME插件使用LightBloom：\n背景&gt;附件设定，放在所有MME下面\n\nSpectrum：\n音频可视化\n\n将wav格式的音频拖到tool的run上\n替换对应的texture，将fx，pmx拖到mmd里\n删除动作镜头音乐左边的框中大筐筐底部的小框里可以更换一下选择范围，输入初始和结束帧，点击范围选择，删除。\n音乐直接拖入新的即可。ps:千万不要在播放时拖入音乐。\n调整模型位置人物和场景可以直接按选择全部后调整，相机需要根据人物更改中心\nPR使用配色方案可以试试:\n\nAdode 2\nAdobe -4\nSL BIG\nSL CLEAN KODAK A&#x2F;B&#x2F;C\nSL GOLD …\nSL NEUTRAL START\n\nPR导出设置\n- \n\n1080p目标比特率5.5,最大比特率23\n\n4K目标比特率19,最大比特率58\n\n音频AAC 48000Hz 320 优先比特率\n\n\nUnity插件导入人物模型，换成人形avatar\nBlender导入blender将人物按照材质切分后调整\n在水滴那一栏的刚体世界环境里的缓存下点 烘焙所有动力学计算结果，在这之前要材质切分\nblender添加材质主要用着色器-&gt;原理化BSDF并在右边连接材质输出（表面）\n勾选插件Node:Node Wrangler并选择原理化BSDF类型，快捷键ctrl+shift+t\n可以在左上角进入贴图文件夹，将贴图拖入\n材质输出需要折叠一下再展开\n选中贴入入口，回车 下 回车 一个个试\n选中整个人物（蒙皮+骨骼），可以右键，选择层级，导入动作\n导出材质：\n\n在shading页面新建做下新建贴图，\n\nMMD+Blender+UnityMMD先用MMD汉化版，导入模型动作，相机调零后选择追踪头，按住ctrl对焦眼睛后进入头部，点击注册保存\n之后通过英文版打开，MMDBridge里选blender，下面日文选短的，后面填长度和30fps（必须）\n导出分辨率200x200 帧率30fps （骼，到骨骼那一栏勾选插件，调参\n\n头发建议0.2&#x2F;0.2&#x2F;15&#x2F;0.2&#x2F;0.3&#x2F;0.2\n尾巴建议0.1&#x2F;0.2&#x2F;13&#x2F;0.5&#x2F;0&#x2F;2\n\n选择头发到编辑模式，选择全部，按M选择按距离，用L选择一部分，按P分离选中，就可以专心做头发了（最好反向选择，选少点），头发的部分要ctrl+j合并\n选择不想移动的部分，新建顶点组（绿色三角）并且指定\n物理（行星）那一栏，创建布料，在缓存里修改总帧数，在形状里将他订到我们之前创的组里，勾选压力和内部弹簧，调参，记得回到物体模式\n导出fbx勾选：选定的物体，类型为骨架和网格；路径模式选择复制，勾选右边的内嵌纹理\nUnity\n去Stereoarts Homepage下载插件MMD4Mecanim_Beta_20200105.zip\n导入两个unitypackage\n拖入人物模型文件夹，勾选同意协议后拖入动作vmd点击process\n\nscene里不显示光照把灯泡标志打开\n如果发现光照怎么调都调不对，可以看看场景的光照map，可以设置为none\n将人物导入，一个做模型，一个带动画，记得改名，然后将动画拖出来，放在自己的动画控制器上，并且也可备份（点一下模型，把动画名字改下，这下就可以复制了ctrl+D）转出动作之后一定要先把模型骨骼改成人形，动画改成减少关键帧0.2\n完成之后可以把pmx删掉，这样下次材质就不会乱了\n天空盒材质球一定要设置为cube形式，可以在HDRP Default Setting里设置，也可以通过在Volume里覆盖，记得把Visual Environment改成HDRI SKY，选择hdri天空发现黑的，改变intensity mode\nPBR:将材质的smoothness和metalic和coatMask调低，metalic和smoothness在中间左右，再给脸上打光；mask上纯蓝色的toon贴图\nhdrp的volume有默认（在project settings里），有全局有局部；另外graphics里面要和当前设定的挡位一致\n贴身衣物穿模要调整z offset\n一般调整：将bae&#x2F;shade feature拉高，shadowMap变黑，System Shadow降低，添加描边（如果加了没用就切换一下场景），basic lookdevs里面调整阴影，皮肤调整为棕红，其他为黑灰色\n头发绑骨骼：\n\n安装animation rigging和magica cloth\n选中角色在工具栏中可视化骨骼，如果要取消就把他的组件删掉\n在角色中新建一个magica bone cloth\n拖入根节点后按start Point Selection，红色为固定节点，绿色为移动，黑色为无关，检查好后按end\n在parameters里选择预设preset后create\n\n制作动画：\n\n在timeline里放入人物的动画器\n\n人物为通用形\n\n在人物下创建bonerenderer和RigBuilder\n\n空物体Rigs添加Rig，下面再添加空物体作为ik节点，按住ctrl选中手掌系欸但，点击工具栏里的align，再在下面添加twoBoneIK，分别放入手臂，手肘，手腕\n\n把自己拖到target里\n\n可以选中IK节点给他一个标识\n\n用finalik：\n\n在对应的位置创建target作为控制和记录的节点，可以把他们放在同一个空物体上\n\n\n\n在做裙子物理时要往下来点，否则会出现鼓包\n实景合成\n将素材放入ae左上后拖入合成，左上角出现的预合成改成30帧，将他拖入合成，获得目标素材\n\n右侧找到跟踪器，点击跟踪摄像机，不行的话用左边高级的详细分析\n\nPR将文件转为avi，视频编码器为Intel IYUV编码解码器，导入MMD点击省性能\n\n解析好后选择地面区块，设置地平面和原点，添加镜头和文本\n\n选中摄像机，文件-脚本-运行实景合成脚本调整好场景大小导出（记得先再编辑-首选项-脚本和表达式里勾选允许脚本写入文件）\n\n先将工具包里的fx放入材质文件夹，再拖入pmx，下面调整off\n\n给插件上材质，打开插件调整阴影位置\n\n之后用ray渲染，拖入人物，天空盒选用Sky Hemisphere\n\nfastTop+ focalLength- EnvDiffLight 0.01 EnvSSSL+ EnvSpecLight(镜反射)- bottomV-\n\nSunlight- shadowV- Contrast-\n\nPSM里把插件消去，SSAO改为100\n\n导出绿幕视频，拖到pr，aep文件也拖入pr\n\npr右侧效果找到视屏效果-键控-超级键，主要颜色选中绿布，有绿布可以降低阴影\n\n\n流程2.0\n载入ray和water（在材质&gt;可编程&gt;水）和平行光\n加入skyBox，调整顺序\n上天空盒材质，main材质\n添加预设控制器数据\n把water的main和材质关掉\n加入模型，显示轮廓线大小最小\n人物main中毛发改为最长的main\n人物材质上Toon下的material02\n将平行光的lightMap改为最后一个，有阴影\n材质skin默认，face中，eye弱\n加入AL大小0.3\n绘制顺序：\n天空盒-timeofday-模型-MME-controller\n\n\n\n","categories":["Tech"],"tags":["MMD"]},{"title":"MMD流程迭代","url":"/2025/08/03/Tech/MMD/MMD%E6%B5%81%E7%A8%8B%E8%BF%AD%E4%BB%A3/","content":"背景随着各种MMD工具的更新，插件的出现，制作MMD有了更多选择。比如从传统的MikuMikuDance到Blender、Unity和Unreal Engine等专业3D软件。\n难点和问题最大的问题其实是数据格式，在MMD软件中，模型文件是pmx格式，而动作和相机数据都是vmd。\nPMX作为MMD模型的专有格式，虽然在MMD生态系统中被广泛支持，但在其他3D软件中却面临诸多问题：\n\n​材质系统差异​：PMX的材质表达与主流PBR材质工作流不兼容\n​骨骼权重限制​：某些复杂蒙皮效果在其他引擎中难以完美重现\n​物理系统​：MMD特有的物理模拟在其他平台需要重新实现\n\nVMD格式虽然小巧高效，但也存在跨平台问题：\n\n​时间轴精度​：不同软件对帧率的处理方式不同\n​曲线插值​：动作曲线在不同引擎中的表现可能不一致\n​相机动画​：MMD相机参数与其他3D软件的映射问题\n\n解决方案\n​PMX转通用格式​：\n使用Blender的MMD Tools插件转换为fbx&#x2F;gltf\nCATS插件提供的优化和重定向功能\n\n\n​VMD动作处理​：\nMMD4Mecanim等Unity插件提供的重定向解决方案\n在Blender中烘焙到一个物体\n\n\n​VMD相机运动处理​：\n使用MMD Tools导入VMD相机数据，会生成一个带有关键帧的空对象和MMD相机，将它烘焙并到处\n\n\n\n新MMD流程Blender\n在Blender上我们可以用鸣潮二创也能如此简单🤨？！！【鸣潮二创教程&#x2F;偏新手】哔哩哔哩_bilibili这篇教程提供的整合包。（由于鸣潮二创也基本上就是MMD制作的流程，所以这篇教程大概够了。\n\n我再精简一下这个视频的内容：\n\n下载好这个定制版blender之后，导入启用三个插件\nmmd-tool\nMiku_Miku_Rig2.0 (AAAMi)\nmmr补充4.1 (鬼离果)\n\n\n然后进行简单的设置（为了适应预设效果）\n使用合成器\n打开后处理\n修改色彩方案\n视图降噪关了\n\n\n然后追加内容，先导入NodeTree里的Bloom，再导入Collections的模型\n用mmd-tool处理\n合成器里面加入Bloom节点\n用MMR生成控制器\n用MMR补充插件删除多余部分\n\n\n然后去时间轴用i插入关键帧k动画或者mmd-tool导入动画\nmmd-tool生成物理以及烘焙物理\n可以调整内容\n修改边缘光光照颜色和强度\n显示修改器效果\n帧率和关键帧距离都放大\n\n\n\nUnity依赖Blender先在Blender导出FBX格式的数据：\n\n选择要导出的模型和骨骼系统\n点击”文件”-&gt;”导出”-&gt;”FBX”\n在导出设置中配置以下关键选项：\n勾选”仅导出选中对象”\n包含物体类型选择”Mesh”和”Armature”\n几何数据中确保包含法线和UV\n如果包含动画，勾选”烘焙动画”\n\n\n将FBX文件和贴图拖入Unity项目Assets文件夹\n选中FBX文件，在Inspector中进行以下设置：\n动画类型设置为”Humanoid”（人形骨骼）\n配置骨骼映射关系\n设置材质和贴图\n\n\n\nPS： 以上操作其实一般不用于Unity，因为Unity的动作模型动作导入用MMD4UnityTools插件更加便捷和准确，Blender导出镜头部分则主要在Unreal那边统一讲解。\n不依赖Blender主要使用MMD4UnityTools工具集，安装插件后将需要转化的文件拖入到资源文件夹即可进行进一步操作。我之前也编写过一个 自动取出主贴图来适应Unity新渲染管线的插件\nUnreal依赖Blender\n同样有使用Blender和不使用Blender的方法，使用的话和Unity类似，但是要注意单位和导出的问题\n\n模型部分\nBlender\n安装MMD Tools插件\n把帧率改一下，缩放单位改为0.01\nMMD Tools导入PMX并把缩放改为8 （如果要保持和VRM4U导入骨骼一致用兼容骨架，可以取消勾选将骨骼重命名，兼容骨架需要手动在虚幻骨架窗口中 window -&gt; asset detail 来打开资产详情）\n不选中rigidbody和joints层级，仅导出可见项，记得骨骼可见（VRM4U导出的不包含rigidbody，从mesh开始的，所以可以只选中这一层级）\n按照UE骨骼标准调整骨骼父级关系\n同时选中模型和骨骼导出为FBX\n路径模式选择”复制”并内嵌纹理（如果还是没有贴图，那就取消自动打包资源再试试。。如果还不行，可能是shader节点不支持FBX，比如没有用BSDF，可以选中mesh然后点击convert to blender）\n设置平滑选择为面\n取消勾选”添加叶骨”\n\n\nUE\n提前创建masked类型材质并用变量赋予有rbga的black贴图，rgb a分别连到颜色和透明度及mask\n导入时勾选高级里的Vertex Attributes\n选择法线和切线\n选择实例化材质，并且赋予base texture给基础和不透明度\n\n\n\n动作部分\n需要接着人物部分操作\n选中角色骨骼导入动作，缩放改为8\n将动作赋予给人物后，可以启用物理和烘焙，导出的时候只选择骨骼和烘焙动画，如果需要表情，需要导出网格体\n\n相机部分\nBlender\n单位改为0.01，选中相机，导入相机动作缩放为8\n导出.usdc （通用场景描述）\n勾选动画以及注意使用英文路径和名称\n\n\nUE\n启用USD导入插件\n角色设置到原点\nfile -&gt; import into level 导入 usdc文件\n找到资源视图里的关卡序列，并添加Camera Cut Track 选择为 Camera\n然后把角色和动作导入进去\n播放\n\n\n\n不依赖Blender\n启用插件后要在项目设置里面拉高他们的导入优先权\n\n使用VRM4U插件导入PMX：\n\n材质类型选择MToon Unlit\nscale 0.08\n生成描边\n勾选部分Optimize选项\n如果要启用描边，导入后把 Plugins&#x2F;VRM4U Content&#x2F;Util&#x2F;Actor&#x2F;MToonAttachActor 拖到人物位置，并且在细节面板选择人物。要改参数可以去人物AssetList里面找Outline材质\n\n使用IVP5U导入VMD：有可能出现重定向问题，可以重新设置重定向animation，不建议\n启用物理\n主要分为从Blender，Unity，UE三个方面\n\n\nBlender中用mmd-tool，注意要在人物移动到开始跳舞的位置再点击物理，然后再点击烘焙，通知注意播放模式是播放每一帧（这是因为Blender的物理计算是依靠刚体，从第一帧开始顺序计算的，不是实时模拟）\n\n以下内容为Blender物理指南，作者MiaoBox  1.开启物理  2.开启物理后有两个参数，一般用默认的就行  3.游标拖到0帧（一般第1帧也行）  4.点下更新世界，改子步数：1，迭代：60  5.设置下结束帧，设置多长物理就烘培到哪，如果不小心烘焙太长，按esc取消  6.看下是不是在“播放每帧”，烘培需要每帧  7.烘培，完成\n  雷区1：没有烘培好就去拖动关键帧  雷区2：动作幅度太大  雷区3：烘培的起始帧不是0或1\n  建议1：  遇到模型物理一直错误，可能模型的问题，换模型试  建议2：  第一帧静止姿态，这也是为什么导入的动作第一帧是静止的，隔几帧之后才是动作开始\n\nUnity中就是用Magica插件啥的，具体有点忘了\n\nUE用Kawaii插件\n\n\n输出结果启用插件movie render queue就可以在sequencer上找到渲染视频的按钮，可以增加几个设置选项，比如输出改为PNG。导出后的图片序列可以用AE进行处理。\n解惑\n为什么要改变缩放单位，导入时还要进行缩放？\n\n\n改变单位，是为了方便导出到其他软件\n因为软件只认数值而不认单位\nBlender使用的是m，而UE使用的是cm\n所以缩放改为0.01即可\n导入模型要放大100倍是为了适应现在缩放后的单位\n否则角色导入进去就太小了\n\n\n为什么要将路径改为复制并内嵌材质，材质转为Blender？\n\n\n路径改为复制是为了让材质贴图在其他机器其他路径也能显示\n内嵌材质是因为fbx格式模型可以内嵌材质（如果是obj格式就得关闭自动打包资源，改为手动解包，因为blender格式可以内嵌资源，而obj格式不行）\n材质转为blender的BSDF才能适配fbx导出时的材质数据，否则一些奇奇怪怪只有blender有的高级功能节点，无法自动转化为fbx的材质，就会导致丢失材质\n\n","categories":["Tech"],"tags":["MMD"]}]