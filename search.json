[{"title":"测试图片","url":"/2025/07/31/Servld/test-img/","content":"\n      \n        b290cb2169507c01435d6d3a3806492052c2b3be290c43af28d083abcc1965746ea7f757efcc4256e3dcce9c7896a59484cf3f4242ea111ae423a5854b2d6c057132a43fd99a040ca40eafafddbd068c39faefb0ef939bbd801b2f53207a0b93c97724676d0b75735b999fed1586839207e8f41c98a5c9a06dc848dbda91b66173262e7df3489de094c85541fea9896f9bd4c7e1d672c48e384144e8fd8b97bb4f3292612706a6dfda126c2de18e7c124ebe23fdce6439f238c5bbf1b73b1d6c\n      \n      \n        \n          \n          \n            请输入与 Nervld Island™ 取得弱神经连接时的口令：\n          \n        \n        \n      \n    \n    ","categories":["Servld"],"tags":["Servld"]},{"title":"Hello World","url":"/2024/03/24/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n","categories":["Other"],"tags":["Other"]},{"title":"First-Diary","url":"/2025/07/31/Diary/First-Diary/","content":"从今天开始，我就要更新自己的博客啦？敲开心ヾ(≧▽≦*)o\n\n那么今天主要是完成了主题的构建，目前长这样(&#x2F;ω＼)：怎么样，感觉还是不错的，有点游戏的感觉反正一步步构建就变成这样啦，哈哈😄接下来主要就集中在：\n\n把之前的笔记整理成博客\n构建一下方便的流程，总结一下也发成笔记\n\n\n今天晚上一定把Obsidian这边弄好，加油ヾ(≧▽≦*)o\n就在我打算创建快捷启动hexo指令的时候\n铛铛铛~~\nfluent search居然突然更新成win11风格UI了，感觉稳定性大大增加，˶╹ꇴ╹˶！\n","categories":["Diary"],"tags":["OpenDiary","🚩"]},{"title":"比较混乱的一天","url":"/2025/08/01/Diary/2025-08-01%20%E6%AF%94%E8%BE%83%E6%B7%B7%E4%B9%B1%E7%9A%84%E4%B8%80%E5%A4%A9/","content":"\n      \n        cc4048064e016ea3e5b45d762a179c794140b710437348753434df48b26c1266b36d7af87b8087a85fb7d400c6bd8d9e1f9ce0cd05a87d92eeed1266cbcdea47c34e0b55c71718ce2e4bd1d28ba4070ba3f8f3e9cc46c3b07d2b87cc4a68adc3097a5002e8f5e47c6c9f1bc12fd3e5a937fc268f10be0ea25b1e983258edff1c89ee33038ef2e95c50bbf9d5bcc7b25e6203d99e084f0f9ba2931256fa6da43ce1e8ee401d7f97566d2b02cdd7cfc0cf819760a46ed19971b5334e24b2040775429bac555ae15f2d5d1eaf310101df2a356468e3b7c1383cd902d015c468ac3399208509b66ff81dc8332568fd767ec6f4ed73ef871f7e701dc61f43d9cc80b745bdfe966e80590e8867003dd60ddf340dc942a7f2581b62021f14eb53a8218590ea8932c869654f2c26d854de9f3f472a6577841262a63612daac82926c1aa9fedc08dcdb7def269f0df18cbd85504be1dc32fd6e2c15c615e5af1743a1d9a5bc2fb390b050c5eed99e275f44e143604d3ed41eb2442c9843cd92c5e0d480b49f8dc0d30a7b544aff1a5f5b7a00013d36c2260bf6fb2a1b7608369b4cb728f505434cb6632f7030399f5158acf62bd3cc8c174f4f3f939d8d27a1d40669fd6ad0c50180536564ed93d38772b08d44944863cc87c7200a22492b07d7522c1404d5fd2fa9fcd9ec5e7723e57d74696a22e3321370a5607d540f465ead45f84f47a1d19b2dcbc754e3f6744d846098f5ceb9d01a3762d4737053a9af609af878727ad2e3e95f2fb6ea11d7f9e58973ba9d27fccf22667ef9fd5a55b3cbb45978fa30c11f6fb8d2c34f4069ab92021f167cb6278978adf26dbe98f2058920314f0208ccfd5254c5306cd55bfc85853bd4277ab3c5c2344957e3e85544deeb50902242431440bff7edc2e9524ad7a269937a3bf031760fbf0c4ac1bb178b3d6164ef514079c0c12e0a07e572ffbfd4459e901207d42206701f9df5373764ccd2bc1b9c19348377ae83458351185f4eb1323a24b61115bb6f9aa9286150893ab50d8a6164016ddbb5ee43e2a6f95de8a9844baa49e0aa3cdfcbad85af5ad0bdec371433706ff02f25507f1042535dab0f9d0f13152c3183306ba82066cf3fbbaad7ca200458fef7d6cc59b208a65f589de4a48f99ed74c803a54311ae0c49da42433300d0fd3a8d4ffea4c406f7f0a9244feda34a46d47179e94405f4923789f8941460875a0988cffc0e407bb0f2fd8f0ec73f2f2f9124210fb26adc17f09ea5c22f907db99481eacd06dcd85cdec0db72b228321dd753e1528fb3d99689d6116bdf7a3a39e4f679249c3a5ee1fe8e3bcc88e3d35d94badcb1999a2b7a19125b9edbd7936566d759a6b5e6cdc22f9b500cb348561546b229438bdac366259fe50e8a19fe1b254f492c57bc78325fca82e93a3a201e947f1f6b05aeee27516c89f475897bfe39813875ddac7f5126fade0fcf81a00ffa279b57af13fa0369a80e3bf28751ec1b74bbf2103c2779296ef3d425aebed3356752a83bed4d0f02967c967aba29d67fb8b7843dfd96d8f22620c1226f6d1e5ca356ad42ae331dcb2f9cae1a01a00f4e7512e15ae08a767cfff20a5d8f6776adffdbe153f8fc7809ef15d82b165a3b8d8003914b3583c400372c0ce2f38ff28ec7f8593e5375060afdda5b11c883c0f493bf8bf6ecb01023249a16c57f7942f7f4a7db6a76c95e655ab69f613cb08f5e31a1966ba1ac70cbc282e6cb748a4de3f875cb1d1872ce6b9c7ea96d350ff58dfca8bc588ab4cc12d8e59d9d201a3e660510a690eda51bc0bef54bf1639cbf60e614d22a755c02e6ad297c9fab3cb75cee2c8c5d8015b4d4c062a1b629b80a26921833e7e20382b921fb8b65c9491e2146273daddaf3135b5ef2edff9f85c8499d8ac532a18ca2fbd4088b4731c0d8b6221244afeaa6458f9b5cbcde84c29885108a75e6715374b03ee46d2acf246e784084690a354ecde2d3df7fdaf03be03bc4b7d09b37422d544e49353ad185a30f4ca1e484ab1fea49fccb04036b2ee13a8398f6c9557f87ff7086906b7624c312ade662398586dfe4145bea5d7e39d84b729cb3a28517a3bdb19fc897dd5100b02e7dcaacc75b00a551907a3932b66fb1bb98231c33c0780c24625d201b3e5f4e6078879b1b7d320f05c2a54dbb3b1144f131dd94c54adaea3976fccdd84ba3b6c76e0120b16720950b5e8a116de3755a779e75e0d730e75afe73ee6228be09d0df985e107bee2ea63e20da5491a8882905907a5abedf106a3a5ba6a04594f1cae279751a8d2f563ff21ebd8fd5ab195b6bb15a27530f568471f26d619c0e57e5101cd744700ee0b647aee93908f67e9d830b02883cf6fbc6bc5b44c86767ee3dce58c244a0a08ffb91c9cc7d953e510c7ba793a95bb7ad82d2f620aa47274e3027df506648b2e5294c6af4f31b4d8fa0eacd94c3f6c5f4ad430c3e169114fb664d5cf718d8d50a0e91f54b62b32374c0f5b35d793339d7ae8d754b9220cac64c3293ba2f153577d0e52885febb4781f9bf4253fb30f7eb19dc047a941278366e36ff6fe7bbe896c7c7a3a3d15074bd29cc0f24b317e41a3697b1a6fb673d2e7fb7f08f744ba6a6a0d79d377ab27be36bd50ac842028dddf90ceb8bec6d6d40479b107f060b33767a9f9f9ff61801c8c9da57fe0ea8949d17d8f6a682a9611473a955d34a6177996dff3dfb30b26285f606ddc73bb490b1f707e28d7b81e42f6b16a7f0ec07b537ba27998e61082f5382f23fedff94f713f0a45814b1838f125b9333d174b7ec4ef9923168340afb89727db493810fd4fea1e36a9556ccb56cfbf5cec5fe92ac135005085bdd98340e9a9e3b31a83b58820682d1f9246386abd0cfc3ea46fddb459508c2dcc3\n      \n      \n        \n          \n          \n            请输入与 Nervld Island™ 取得弱神经连接时的口令：\n          \n        \n        \n      \n    \n    ","categories":["Diary"],"tags":["🚩","Diary","🌧️","😕"]},{"title":"从Unity到UE","url":"/2025/08/02/Tech/%E4%BB%8EUnity%E5%88%B0UE/","content":"背景最近重新拾起UE学习一段时间了，发现再次学习感悟确实比一开始多。并且逐渐发现了引擎的共通之处。故撰此文章来进行梳理，以引导后来的朋友，解我当初不能解之疑惑。\n毕竟当时我从Unity开始往UE转的时候，真的各种不习惯，也想着找一个别人总结的经验贴，但是当时感觉这些博客的比较太过公式化（也就是罗列各种API，仅仅是在UE C++中复刻Unity中的C#代码）。但忽略了我们真正的疑惑和需求。\n\n所以，我希望能从更加接近引擎设计逻辑的角度去探讨他们的不同，以及从一个具体的例子来指导我们逐步认识UE\n\n粗略对比编辑器文件组织结构Unity组织结构是一个Asset里面放置当前项目的所有资产和代码，当你打开一个unitypackage的时候，Unity会帮你直接导入到Asset文件夹，而UE这边则是导入Content文件夹。\n我们当然可以把Content当做Asset去使用，但是UE其实是提醒我们：\n\n我们自己的文件和资源也要创建一个文件夹，名字就是我们项目名称，这样我们的资源和Content资源就可以完全分开，我们需要什么，再去复制那一部分资源即可。\n\n场景视图以及游戏对象Unity的场景视图内的GameObject我们可以随意修改他们的父子关系，可是在UE里面并不容易，因此之前在Unity中使用的灵活的给不同物体创建脚本，甚至在游戏运行过程中在场景视图里面再去轻松的启用和关闭脚本、改变物体父子关系等等，就显得不那么适用。\n而这就引出了Unity和UE对待游戏对象很大的不同\n\nUnity开发者更喜欢组合的开发模式，把功能分散到各个脚本中，而脚本又分散到各个物体上，因为创造脚本很容易，并且每个脚本都能充分调用Unity的功能，再给自己加上各种组件。\n而UE开发者大部分时间用的是继承，比如创建一个个蓝图类去继承C++类，对于喜欢纯C++开发逻辑的我，比较倾向于将蓝图类比为Unity里面的Prefab，因为我的逻辑主要用C++实现，而创建蓝图，主要是为了将他们作为实例化对象，并且修改一些绑定的资源。\n\n引擎现有代码对于这一部分，我并没有做完整充分的调研，就个人感觉而言，Unity很多代码似乎集中在编辑器部分，这使得Unity的编辑器很稳定而且很好用。但UE的代码很多都集中在各种实用的功能上，比如一个自带的第三人称控制器，里面甚至包含了联机需要的代码。\n所以如果我们的目的单纯是制作游戏，那么当我们熟悉UE之后，做出一个功能完善的游戏是更加容易的。\n我们要写的代码正因为UE为我们添加了那么多功能和限定，让我们自己想要开始写功能的时候，最好的方案不是从零开始，而是先学习正确的使用方法，然后再编写代码。\n好在现在AI工具非常强大，并且虚幻官方的论坛也有很多问题的答案。因此我们要做的就是熟悉虚幻给我们的各种类。\n比如当我想要制作一个人物控制器的时候，涉及到的类就包括动画蓝图、角色控制器、SkeletalMesh，Montage、blend space等等，当然这些功能我们在学Unity的时候也是一点点学的，所以接受就好了，记住他们一般的作用流程。\n最关键的是当我们想要真正写自己的C++代码的时候，我们得在.h文件里面定义变量，通常是一些资产、一些组件的引用等等，这些名字我们要了解，可以从蓝图里面去找对应的名字。随后我们在.cpp文件中实例化这些组件，使用这些组件，并且可以通过方法改变这些组件的父子关系。\n\n不同于Unity中我们可以轻松的将组件和游戏对象区分开，这里我们要记得AActor是类似于GameObject的存在，但是Component也有可能是一个拥有自己Transform和独特功能的类似GameObject的存在，但是他们并不相同，比如AttachToComponent和AttachToActor，可以分别做到将一个对象转移到Component或者Actor的下面。（将一个物体转移到Component下？这在Unity是无法想象的）\n\n有时候蓝图里面的方法想要在C++使用并不方便，但是坚持用C++能让对象的引用关系和逻辑变得清晰。所以这里只能通过逐渐学习来熟悉API。\n以一个例子来详细对比\n比如说我们要实现一个第三人称射击游戏：\n\n在Unity中我们会创建一个空物体，然后给他绑定上碰撞体，动画器，再给他加一个子物体，显示出角色蒙皮，我们下载好动画资源并改为humanoid，就可以和角色适配上。但是在UE里，我们的动画需要经过重定向操作（相比还是挺耗时的）以更好的适配动画数据。\nUnity我们在动画器里面做出各种状态过渡，然后用C#代码给这些过渡条件提供值或者触发，而UE里面AnimInstance类就是动画器，我们创建一个C++代码继承它之后，它的成员就可以暴露给自己的蓝图子类，在子类里面编辑动画状态转移。\n为了实现武器拾取，我们都会在骨骼上放置插槽，当武器拾取之后，我们重新绑定父对象并设置Transform组件。只不过UE里面转移物体位置的函数，就自带可以填入插槽名称和Transform变化方式的参数。\n我们的武器需要生成子弹，这就需要创建一个子弹预制体以及子弹发射位置，在Unity中我们自然的完成这一动作，并用Instantiate进行实例化预制体，Instantiate是GameObject的方法，但是在UE中，我们用GetWorld()-&gt;SpawnActor&lt;&gt;()，并且我们如果要传入蓝图类，可以定义一个STSubclassOf&lt;AActor&gt;变量用于在编辑器里面传入蓝图类，然后我们把它当做预制体来生成。\n在Unity中我们可以用骨骼偏移来制作瞄准效果，UE中我们则使用Montage来在原本基础上再播放一个动画去覆盖原本动画。和Unity一样，动画文件里面可以放置通知，但是UE更多的是可以放置粒子特效什么的。Unity里面自动调用同名函数，而UE里面是在通知前面加上AnimNotify_作为前缀的方法，会自动调用。（UE是这样的，喜欢在各种地方加上前缀来标注，但是实际上用到的确实去除前缀后缀的属性、函数）\n其实UE用多了之后，会发现思路被UE的规则梳理过一遍之后，变得更清晰。当然在UE学习使用的过程中也会遇到各种各样意想不到的问题，这些在以后的文章中再分享~\n题外话用了UE的资产商店才知道优质的免费资源原来这么多，现在虽然虚幻商城全面转到了Fab上，但是免费资产赠送依然存在，并且据说周期缩短了，有时可以看到资产上面标注了对Unity的兼容性。\nFab商城链接：Fab\n","categories":["Tech"],"tags":["UE"]}]